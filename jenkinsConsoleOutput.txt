Started by user Hail Aliya Jacob
Obtained Jenkinsfile from git https://github.com/hailjacob/parcel_delivery
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/parcel-delivery-dockerpush-pipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
using credential github
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/hailjacob/parcel_delivery # timeout=10
Fetching upstream changes from https://github.com/hailjacob/parcel_delivery
 > git --version # timeout=10
 > git --version # 'git version 2.25.1'
using GIT_ASKPASS to set credentials github
 > git fetch --tags --force --progress -- https://github.com/hailjacob/parcel_delivery +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 235e06d6bd0e91ba811f81970d6fbe6226009f85 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 235e06d6bd0e91ba811f81970d6fbe6226009f85 # timeout=10
Commit message: "updates"
 > git rev-list --no-walk 1a7571493f3811f526091ab8c9b6b5e70dae11fd # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Cloning Git)
[Pipeline] git
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/hailjacob/parcel_delivery.git # timeout=10
Fetching upstream changes from https://github.com/hailjacob/parcel_delivery.git
 > git --version # timeout=10
 > git --version # 'git version 2.25.1'
 > git fetch --tags --force --progress -- https://github.com/hailjacob/parcel_delivery.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 235e06d6bd0e91ba811f81970d6fbe6226009f85 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 235e06d6bd0e91ba811f81970d6fbe6226009f85 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master 235e06d6bd0e91ba811f81970d6fbe6226009f85 # timeout=10
Commit message: "updates"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] sh
+ gradle clean test
Starting a Gradle Daemon (subsequent builds will be faster)
> Task :clean
> Task :compileJava
> Task :processResources
> Task :classes

> Task :compileTestJava
Errors occurred while build effective model from /var/lib/jenkins/.gradle/caches/modules-2/files-2.1/com.sun.xml.bind/jaxb-osgi/2.2.10/c926a537af564ec047ec6308df1d0d2a03364a86/jaxb-osgi-2.2.10.pom:
    'dependencyManagement.dependencies.dependency.systemPath' for com.sun:tools:jar must specify an absolute path but is ${tools.jar} in com.sun.xml.bind:jaxb-osgi:2.2.10

> Task :processTestResources NO-SOURCE
> Task :testClasses

> Task :test
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/var/lib/jenkins/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy/2.5.13/ac054525fdc81cbd0bc2552b57052ebb1a93cd40/groovy-2.5.13.jar) to method java.lang.Object.finalize()
WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[30m2020-12-06 18:28:28,682[0;39m [34mINFO [0;39m [[34mSpringContextShutdownHook[0;39m] [33morg.springframework.scheduling.concurrent.ExecutorConfigurationSupport[0;39m: Shutting down ExecutorService 'applicationTaskExecutor'
[30m2020-12-06 18:28:28,798[0;39m [34mINFO [0;39m [[34mSpringContextShutdownHook[0;39m] [33morg.springframework.scheduling.concurrent.ExecutorConfigurationSupport[0;39m: Shutting down ExecutorService 'applicationTaskExecutor'

BUILD SUCCESSFUL in 1m 30s
5 actionable tasks: 5 executed
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] sh
+ gradle build
> Task :compileJava UP-TO-DATE
> Task :processResources UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :bootJarMainClassName
> Task :bootJar
> Task :jar SKIPPED
> Task :assemble

> Task :compileTestJava UP-TO-DATE
Errors occurred while build effective model from /var/lib/jenkins/.gradle/caches/modules-2/files-2.1/com.sun.xml.bind/jaxb-osgi/2.2.10/c926a537af564ec047ec6308df1d0d2a03364a86/jaxb-osgi-2.2.10.pom:
    'dependencyManagement.dependencies.dependency.systemPath' for com.sun:tools:jar must specify an absolute path but is ${tools.jar} in com.sun.xml.bind:jaxb-osgi:2.2.10

> Task :processTestResources NO-SOURCE
> Task :testClasses UP-TO-DATE
> Task :test UP-TO-DATE
> Task :check UP-TO-DATE
> Task :build

BUILD SUCCESSFUL in 10s
6 actionable tasks: 2 executed, 4 up-to-date
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Building image)
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
+ docker build -t hailaliya/test-repo:137 .
Sending build context to Docker daemon  31.39MB

Step 1/5 : FROM adoptopenjdk/openjdk11:alpine-jre
 ---> ef6989023ee9
Step 2/5 : ARG JAR_FILE=./build/libs/delivery-0.0.1-SNAPSHOT.jar
 ---> Using cache
 ---> e5aae17a7c9a
Step 3/5 : WORKDIR /opt/app
 ---> Using cache
 ---> 51ed0cae2088
Step 4/5 : COPY ./build/libs/delivery-0.0.1-SNAPSHOT.jar app.jar
 ---> 3dba0a51f020
Step 5/5 : ENTRYPOINT ["java","-jar","app.jar"]
 ---> Running in 53283acd1f63
Removing intermediate container 53283acd1f63
 ---> 7a5ae58ef5bd
Successfully built 7a5ae58ef5bd
Successfully tagged hailaliya/test-repo:137
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pushing Image)
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
$ docker login -u hailaliya -p ******** https://registry-1.docker.io/v2/
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/workspace/parcel-delivery-dockerpush-pipeline@tmp/5d44d099-9847-454d-9079-d478ef4ec919/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
+ docker tag hailaliya/test-repo:137 registry-1.docker.io/hailaliya/test-repo:137
[Pipeline] isUnix
[Pipeline] sh
+ docker push registry-1.docker.io/hailaliya/test-repo:137
The push refers to repository [registry-1.docker.io/hailaliya/test-repo]
b55f979cd342: Preparing
f62c53be047f: Preparing
f66e992b87b2: Preparing
2b8543c4f490: Preparing
ace0eda3e3be: Preparing
f62c53be047f: Layer already exists
f66e992b87b2: Layer already exists
ace0eda3e3be: Layer already exists
2b8543c4f490: Layer already exists
b55f979cd342: Pushed
137: digest: sha256:22720eb04802917d90bd6deebc39555d7342c3ce3b2c03c233e5d6b4fb95107c size: 1370
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
